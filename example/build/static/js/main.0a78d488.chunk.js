(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(20)},,,,,function(e,t,n){},function(e,t,n){const r=n(15),a=e=>{const t=e.split("\n"),n=Number(t[0]);return{suggestionsList:t.slice(2).filter(e=>e.includes("#")).map(e=>{let t=e.split("#");return{treats:""!==t[0]?t[0].trim().split(" ").map(Number):[],leaves:""!==t[1]?t[1].trim().split(" ").map(Number):[]}}),nDoctors:n}};e.exports={inputPrompt:e=>{prompt({type:"input",name:"filepath",message:"Enter input path",result:e=>e.trim(),validate:e=>!!/(.)+(\.txt$)/.test(e)||"Input must be a *.txt file"}).then(t=>e(t.filepath)).catch(console.error)},getInput:e=>{const t=r.readFileSync(e,"utf8");return a(t)},processInput:a}},,function(e,t){e.exports={pipe:(...e)=>t=>e.reduce((e,t)=>t(e),t),mostFrequentInArray:e=>{let t=e.reduce((e,t)=>(e[t]=(e[t]||0)+1,e),{});const n=Object.keys(t).map(e=>({id:Number(e),count:t[e]}));return n.sort((e,t)=>t.count-e.count).filter(e=>e.count===n[0].count)}}},,,function(e,t,n){},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),c=n(4),s=n.n(c),l=n(6),o=(n(13),n(2));const i=n(14).processInput,u=n(16),p=u.pipe,m=u.mostFrequentInArray,d=({suggestionsList:e})=>{const t=e.reduce((t,n,r)=>[...t,f(e,n,r)],[]);return g(t)},f=(e,t,n)=>e.reduce((e,n,r)=>{const a=n.treats,c=n.leaves,s=a.some(e=>t.leaves.includes(e))||c.some(e=>t.treats.includes(e));return Object(o.a)(Object(o.a)({},e),{},{conflicts:s?[...e.conflicts,r]:[...e.conflicts]})},Object(o.a)(Object(o.a)({id:n},t),{},{conflicts:[]})),g=e=>{let t=JSON.parse(JSON.stringify(e));for(;;){let n=t.reduce((e,t)=>[...e,...t.conflicts],[]);if(0===n.length)break;const r=m(n).map(e=>e.id),a=JSON.parse(JSON.stringify(e)).filter(e=>r.includes(e.id)).sort((e,t)=>t.conflicts.length-e.conflicts.length)[0].id;t=t.filter(e=>e.id!==a),h(t,a)}return t.length},h=(e,t)=>e.filter(e=>{const n=e.conflicts.indexOf(t);return n>-1&&e.conflicts.splice(n,1),e}),b=e=>p(i,d)(e);var E=n(7);n(19);var N=function(e){const t=Object(E.a)({accept:".txt",onDrop:t=>{t.forEach(t=>{const n=new FileReader;n.onabort=(()=>console.log("file reading was aborted")),n.onerror=(()=>console.log("file reading has failed")),n.onload=(()=>(t=>{e.onChange(t)})(n.result)),n.readAsText(t)})}}),n=t.fileRejections,r=t.getRootProps,c=t.getInputProps,s=t.acceptedFiles.map(e=>a.a.createElement("div",{key:e.path},a.a.createElement("hr",null),a.a.createElement("p",{className:"show-input"},"Input: ",e.path))),l=n.map((e,t)=>a.a.createElement("p",{key:"".concat(e.path,"_error"),className:"error"},"This file is not supported.",a.a.createElement("br",null),"You can only import *.txt files",n[0].a));return a.a.createElement("div",null,a.a.createElement("div",Object.assign({className:"dropzone"},r()),a.a.createElement("input",c()),a.a.createElement("p",null,"Drag and drop your input file here, ",a.a.createElement("br",null),"or click to select files")),s,l)};function O(){const e=Object(r.useState)(),t=Object(l.a)(e,2),n=t[0],c=t[1];return a.a.createElement("div",{className:"App"},a.a.createElement("h1",{className:"title"},"Patient Treatment Solver"),a.a.createElement(N,{onChange:e=>{const t=b(e);c(t)}}),n&&a.a.createElement(a.a.Fragment,null,a.a.createElement("h2",{className:"label"},"Result"),a.a.createElement("p",{className:"result"},n)))}const v=document.getElementById("root");s.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(O,null)),v)}],[[8,1,2]]]);
//# sourceMappingURL=main.0a78d488.chunk.js.map